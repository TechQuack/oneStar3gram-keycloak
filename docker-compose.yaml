services:
  keycloak:
    container_name: keycloak-onestar3gram
    command: start-dev --import-realm
    build:
      context: .
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak-onestar3gram/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: proxy-onestar3gram
      KC_HTTP_ENABLED: true
      KC_PROXY_ADDRESS_FORWARDING: true
      KC_PROXY_HEADERS: xforwarded
    ports:
      - "8080"
      - "9000"
    depends_on:
      - postgres
    volumes:
      - ./imports:/opt/keycloak/data/import
    networks:
      - keycloak
   
  reverse-proxy:
    container_name: proxy-onestar3gram
    # The official v3 Traefik docker image
    image: traefik:v3.2
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "8081:8081"
      # The Web UI (enabled by --api.insecure=true)
      - "8085:8085"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/:/etc/traefik:ro
    networks:
      - keycloak

  postgres:
    image: postgres:16.6
    container_name: postgres-keycloak-onestar3gram
    volumes:
      - postgres_data_onestar3gram:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432"
    networks:
      - keycloak

volumes:
  postgres_data_onestar3gram:

networks:
  keycloak:
    driver: bridge
    name: keycloak